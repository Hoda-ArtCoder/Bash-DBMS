#!/bin/bash
source ./Validations
source ./Common

# Declare flag variable to check success of operations
flag=1


function create_table() {
    echo -e "${cyan}>> Enter table name: ${clear}" 
    read tblName
    
    if ! is_empty_input "$tblName" && ! is_already_exists_file "$DB_DIR/$SELECTED_DB/$tblName" && is_valid_name "$tblName"; then
    echo -e "${blue}Table name [ $tblName ] is valid------------------"
    sleep 0.5
    echo -e "Continuing---------------------------------${clear}" 
    flag=1
    else
        echo -e "${yellow}Warning: Invalid table name. Please try again. ${clear}" 
        flag=0
        create_table
    fi

    if [ $flag -eq 1 ]; then
        # Input number of columns-------------------------------
        echo -e "${cyan}>> Enter the number of columns in your table: ${clear}"
        read colNum
        
    if ! is_empty_input "$colNum" && is_int "$colNum" && ! is_less_than_zero "$colNum"; then
            echo -e "${blue}Number of columns [ $colNum ] is valid."
            sleep 0.5
            echo -e "Continuing-----------------------------------${clear}" 
            
            touch "$DB_DIR/$SELECTED_DB/$tblName"  
            touch "$DB_DIR/$SELECTED_DB/$tblName.metadata"
            
            if [[ -f "$DB_DIR/$SELECTED_DB/$tblName" && -f "$DB_DIR/$SELECTED_DB/$tblName.metadata" ]]; then
                echo -e "${green}Files '$tblName' and '$tblName.metadata' created successfully for table creation.${clear}"
            else
                echo -e "${yellow}Warning: Failed to create files '$tblName' and/or '$tblName.metadata'.${clear}"
                flag=0  # Set the flag to indicate failure
                create_table  # Retry table creation or handle the error
            fi

            flag=1
            create_columns
        else
            echo -e "${yellow}Failed validation checks. Please try again...${clear}"
            flag=0
            create_table
        fi  
    fi
}

function create_columns() {
    # Adding PK column
    if [ $flag -eq 1 ]; then
        echo -e "${cyan}Enter PK column followed by datatype: e.g.[ id int ] ${clear}"
        read colName colType
        if ! is_empty_input "$colName" &&  is_valid_name "$colName" &&  \
        ! is_empty_input "$colType" && ! is_invalid_datatype "$colType" && \
        ! is_duplicate_column "$colName" "$tblName.metadata" ; then
            #adding metadata PK row
            echo  "$colName:$colType:PK" >> "$DB_DIR/$SELECTED_DB/$tblName.metadata"
            echo -e "${green}$colName:$colType:PK is added to $tblName.metadata ${clear}"
            flag=1
        else
            echo -e "${yellow}Failed validation checks. Aborting table creation...${clear}"
            sleep 0.5
            echo -e "${gray}Deleting files '$tblName' and '$tblName.metadata'${clear}"
            rm "$DB_DIR/$SELECTED_DB/$tblName" "$DB_DIR/$SELECTED_DB/$tblName.metadata"
            flag=0
            sleep 0.5
            tablesMenu
        fi
    fi

    if [ $flag -eq 1 ]; then
        for ((i=2; i<$colNum+1; i++)) # Loop through the number of columns -1 
        do
            echo -e "${cyan}Enter column $i followed by datatype: e.g.[ name string ] ${clear}"
            read colName colType
            if ! is_empty_input "$colName" &&  is_valid_name "$colName" &&  \
            ! is_empty_input "$colType" && ! is_invalid_datatype "$colType" && \
            ! is_duplicate_column "$colName" "$DB_DIR/$SELECTED_DB/$tblName.metadata" ; then
                echo "$colName:$colType" >> "$DB_DIR/$SELECTED_DB/$tblName.metadata"
                sleep 0.5
                echo -e "${green}$colName:$colType is added to $tblName.metadata ${clear}"
                flag=1
            else
                echo -e "${yellow}Failed validation checks. Aborting table creation...${clear}"
                rm "$DB_DIR/$SELECTED_DB/$tblName" "$DB_DIR/$SELECTED_DB/$tblName.metadata"
                 flag=0
                tablesMenu
            fi
        done
    fi
    if [ $flag -eq 1 ]; then
        sleep 0.5
        echo -e "${green}------TABLE [ $tblName ] CREATED SUCCESSFULLY-------${clear}"
        tablesMenu
    fi
}
